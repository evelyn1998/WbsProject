//C++ Assignment
//Section A
//Question 4: Random Number Generation, small Research Topic
//Test function

#include <random>
#include <iostream>
#include <vector>
#include <map>
#include "Question4.hpp" 


//----------------------------------------------
//TO DO: COMMENT AND MAKE EVERYTHING MORE TIDY!
//---------------------------------------------

int main()
{
	//------------------------------------------------------------------------------------------
	//THE FOLLOWING LINES OF CODE ARE USED FOR QUESTION 4 PART (b) - GENERATING POISSON VARIATES
	//-------------------------------------------------------------------------------------------

	std::random_device randev;
	std::mt19937 gen(randev());

	std::poisson_distribution <int> dist(4); //producing random numbers following a Poisson distribution with parameter 4
	std::vector<int> pvec; //creating a vector to store the random numbers that will be generated
	int p; //create the variable p
	std::map<int, int> mypMap; //creating a map to store the random numbers that will be generated and the number of times each occurs

	std::cout << "QUESTION 4 PART B: " << std::endl;
	for (int h = 0; h < 100000; ++h)
	{
		p = dist(gen); //use "dist" to transform the random number generated by "gen" into a number following the Poisson distribution with parameter 4, and store that generated random number
		pvec.push_back(p); //adding p to the vector
		//std::cout << x << ' '; //print the stored random number
		//std::cout << dist(gen) << ' ';

	}

	for (int m = 0; m < pvec.size(); ++m)
	{
		mypMap.insert(std::pair<double, double>(pvec[m], std::count(pvec.begin(), pvec.end(), pvec[m])));   //create a map with keys -0.3, -0.2, ...and value the number of times each of the keys occur //REVISIT THIS COMMENT!!!!
	}

	// Loop through the map and print the first and second element
   // First = key, second = value
	for (auto it = mypMap.begin(); it != mypMap.end(); it++)
	{
		std::cout << "Value: " << it->first << "\t" << "Number of occurances: " << it->second << std::endl;
	}
	mypMap.clear();
	pvec.clear();

	//--------------------------------------------------------------------------------------------------------------------------------------
	//THE FOLLOWING LINES OF CODE ARE USED FOR QUESTION 4 PART (c)-APPROXIMATING THE SOLUTION OF THE SDE FOR THE GEOMETRIC BROWNIAN MOTION
	//---------------------------------------------------------------------------------------------------------------------------------------

	std::cout << std::endl << "QUESTION 4 PART C: " << std::endl;
	//Print the approximate solution at each mesh point using the following set of parameters: a = 5%, b = 25%, T = 0.5 year, S_0 = £150, N = 1000
	printStock(0.05, 0.25, 0.5, 150.0, 1000.0);

}




	
	


